version: "3"

services:
  proxy:
    image: nginx:alpine
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
    depends_on:
      - ui
      - api

  ui:
    image: node:14
    working_dir: /src/app
    volumes:
      - ./ui:/src/app
      - node-cache:/src/app/node_modules
    command: npm start
    depends_on:
      ui-updater:
        condition: service_completed_successfully

  api:
    build:
      context: ./api
    volumes:
      - ./api:/src/app
    command: flask run --host 0.0.0.0
    environment:
      - FLASK_APP=fakebird
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONDONTWRITEBYTECODE=1
      - SQLALCHEMY_DATABASE_URI=postgresql://fakebird:fakepassword@db:5432/fakebird?sslmode=disable
      - APPLICATION_ERROR_RATE=0.0
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully

  db:
    image: postgres:13
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=fakebird
      - POSTGRES_DB=fakebird
      - POSTGRES_PASSWORD=fakepassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fakebird"]
      interval: 10s
      timeout: 5s
      retries: 5

  testdb:
    image: postgres:13
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=fakebird
      - POSTGRES_DB=fakebird
      - POSTGRES_PASSWORD=fakepassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fakebird"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    image: migrate/migrate
    volumes:
      - ./db/migrations/:/db/migrations/
    command: -path=/db/migrations/ -database postgresql://fakebird:fakepassword@db:5432/fakebird?sslmode=disable up
    depends_on:
      db:
        condition: service_healthy

  ui-updater:
    image: node:14
    working_dir: /src/app
    volumes:
      - ./ui:/src/app
      - node-cache:/src/app/node_modules
    command: npm install

  test-migrator:
    image: migrate/migrate
    volumes:
      - ./db/migrations/:/db/migrations/
    command: -path=/db/migrations/ -database postgresql://fakebird:fakepassword@testdb:5432/fakebird?sslmode=disable up
    depends_on:
      testdb:
        condition: service_healthy

  api-tester:
    build:
      context: ./api
    volumes:
      - ./api:/src/app
      - pytest-cache:/src/app/.pytest_cache/
    command: python -m pytest ./tests
    environment:
      - FLASK_APP=fakebird
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONDONTWRITEBYTECODE=1
      - SQLALCHEMY_DATABASE_URI=postgresql://fakebird:fakepassword@testdb:5432/fakebird?sslmode=disable
    depends_on:
      testdb:
        condition: service_healthy
      test-migrator:
        condition: service_completed_successfully

  ui-tester:
    build:
      context: ./ui
      target: builder
    volumes:
      - node-cache:/src/app/node_modules
      - ./ui:/src/app
    command: npm test

volumes:
  node-cache:
  db-data:
  pytest-cache:
